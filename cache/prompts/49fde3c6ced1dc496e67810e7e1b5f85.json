{"content": [{"text": "# Joshua Oliphant\n\n**Joshua Oliphant**  \n360.333.0114  \n[joshua.oliphant@hey.com](mailto:joshua.oliphant@hey.com)  \n[https://linkedin.com/in/joshuaoliphant](https://linkedin.com/in/joshuaoliphant)\n\n## Professional Summary\n\nSeasoned Site Reliability Engineer with 5+ years of experience implementing automation, observability solutions, and infrastructure as code for distributed systems. Proven track record of maintaining high-performance, reliable services in Kubernetes environments across multiple cloud platforms. Expertise in designing monitoring systems, establishing SLOs, and leading incident response to ensure platform reliability and scalability while supporting millions of users.\n\n## Professional Experience\n\n### Nortal - Consultant for T-Mobile\n\nSenior Software Engineer (SDE4)  \nOlympia, WA - Remote  \n*January 2022 \u2013 April 2024*  \n\n- Implemented reliability-focused Docker containerization of Java/Spring Boot microservices, establishing infrastructure as code practices that improved system scalability and efficiency by decreasing image size by nearly 50% with Java 9 modules.\n- Designed and implemented a Python automation tool with the Click library that improved incident response time and system reliability by streamlining operational processes including production releases and rollbacks.\n- Established self-healing system architecture by implementing GitLab CI/CD pipelines and Helm for Kubernetes services, creating observability-driven automation that ensured reliable builds, tests, and deployments while maintaining service level objectives.\n- Architected and implemented highly available Kafka clusters in Kubernetes using open-source Strimzi, enabling reliable distributed systems with event-driven microservices while establishing monitoring and performance metrics that reduced operational costs.\n\n**Technical stack:**\n\n- Back-end: Microservices, Java 17, Spring, Python automation\n- Platform: Kubernetes in datacenter\n- Databases: Postgres, H2\n- Virtualization: Docker\n- Testing: Junit, Gatling\n- Monitoring & Observability: Splunk, Grafana, custom SLO/SLI dashboards\n- Others: Maven, Jira, Splunk, Git, Tilt, Helm, Kafka, REST, event-driven architecture\n\n### Nortal - Consultant for Motorola\n\nSenior Software Engineer (SDE3)  \nOlympia, WA - Remote  \n*February 2021 \u2013 December 2021*  \n\n- Developed Azure DevOps CI/CD pipelines to automate the deployment of Dotnet services to FedRamp environments.\n- Focused on high-quality C#/.Net microservices development.\n\n**Technical stack:**\n\n- Back-end: C#, .Net\n- Cloud: Azure\n- Virtualization: Docker\n- Testing: MSTest\n- Others: Git, Jira, REST\n\n### Nortal - Consultant for Amazon\n\nSenior Software Engineer (SDE3)  \nOlympia, WA - Remote  \n*September 2020 \u2013 January 2021*  \n\n- Led a team to integrate AWS services (Lambda, Kinesis, DynamoDB, S3, Glue) into an ETL data pipeline, making the cleaned up and transformed code available to key downstream services.\n- Authored Java AWS Lambdas for data processing within Step Functions, ensuring reliable execution of each data processing step.\n- Used IaC (Infrastructure as Code) with the AWS CDK (Cloud Development Kit) in Typescript to create safe, repeatable infrastructure.\n\n**Technical stack:**\n\n- Back-end: Java, AWS Lambdas\n- Cloud: Amazon Web Services (AWS)\n- Databases: DynamoDB\n- Virtualization: None (Lambdas)\n- Testing: Junit\n- Monitoring: Cloudwatch\n- Others: Git, Kinesis, Glue, Step Function, Lambda, IaC (CDK), ETL\n\n### Nortal - Consultant for Brightloom (Startup)\n\nSenior Software Engineer (SDE3)  \nOlympia, WA - Onsite -> Remote  \n*February 2020 \u2013 September 2020*  \n\n- Built backend microservices with Python and Django with a consistent structure, increasing developer productivity.\n- Built CI/CD pipelines with TravisCI to deploy Python services to Kubernetes with Helm, delivering reliable applications with a fast developer feedback loop.\n- Contributed to Terraform IaC (Infrastructure as Code), creating reliable and repeatable infrastructure.\n\n**Technical stack:**\n\n- Back-end: Python, Django, Microservices, REST\n- Platform: Kubernetes\n- Databases: Postgres, sqlite\n- Virtualization: Docker\n- Monitoring: Datadog\n- Testing: unittest\n- Others: Git, Jira, Helm, IaC (Terraform), CI/CD, TravisCI\n\n### Nortal - Consultant for Expedia\n\nSoftware Engineer 2  \nSeattle, WA - Onsite  \n*August 2019 \u2013 January 2020*  \n\n- Independently executed and designed a data pipeline, enabling Expedia to make data-driven decisions in downstream services.\n- Constructed Java microservices and updated an existing Lua service, key components of the data transformation pipeline.\n- Integrated Kafka for continuous data transformation and deployed solutions on AWS ECS, showcasing cloud expertise.\n\n**Technical stack:**\n\n- Back-end: Java, Spring, Microservices, event-driven, Lua\n- Cloud: AWS\n- Virtualization: Docker\n- Testing: Junit\n- Monitoring: Datadog\n- Others: Git, Kafka, ECS, CI/CD\n\n### Nordstrom - Kubernetes Platform Team\n\nSoftware Engineer 2  \nSeattle, WA - (Onsite)  \n*August 2018 \u2013 August 2019*  \n\n- Led Site Reliability initiatives for Kubernetes platform, establishing observability best practices, implementing infrastructure as code, and creating runbooks that increased platform reliability and team productivity.\n- Managed large-scale Kubernetes clusters (50+ nodes) for critical workloads.\n- Provided on-call incident management and response, implementing observability solutions and automation that ensured system reliability, stability and performance across distributed systems.\n- Designed and implemented infrastructure as code and automation solutions using Python, bash, and makefiles to create self-healing systems and reduce manual operational tasks.\n- Led monthly incident response and disaster recovery exercises, implementing post-mortem processes that reduced MTTR (Mean Time To Recovery) and ensured smooth recovery from multiple levels of system failures.\n\n**Technical stack:**\n\n- Back-end: Golang, Python, bash, makefiles\n- Cloud: AWS, GCP\n- Platform: Kubernetes\n- Virtualization: Docker\n- Testing: go test\n- Monitoring: Prometheus, Grafana, Datadog\n- Others: Bazel, Gitlab, Gitlab CI, Gitlab issue tracking, Helm, Prometheus, Datadog, S3\n\n### Nordstrom - POS Modernization Team\n\nSoftware Engineer 1-2  \nSeattle, WA - (Onsite)  \n*August 2015 \u2013 August 2018*  \n\n- Played a key role in the Point-of-Sale system's transition from a monolith to a microservices architecture.\n- Became an Apache Kafka SME, deepening expertise in event-driven architecture.\n- Containerized services for deployment to Kubernetes.\n\n**Technical stack:**\n\n- Back-end: Java, Spring\n- Cloud: AWS\n- Platform: Kubernetes\n- Virtualization: Docker\n- Testing: Junit, Cucumber\n- Monitoring: Datadog, Splunk\n- Others: Maven, Gitlab, Jira, Confluence, Splunk, Datadog, Kafka\n\n## Technical Skills\n\n- **Site Reliability Engineering:** Infrastructure as Code, distributed systems, incident management, SLO/SLI implementation, runbooks, post-mortems, self-healing systems\n- **Observability & Monitoring:** Datadog, Splunk, Prometheus, Grafana, Cloudwatch, custom dashboards, alerting\n- **Container Orchestration:** Kubernetes, Helm, Docker, service mesh\n- **Cloud Platforms:** AWS (Lambda, Glue, Step Function, ECS, S3), GCP experience\n- **Automation & CI/CD:** GitLab CI, Terraform, Ansible, Python automation, bash scripting\n- **Programming Languages:** Python, Java, Go basics, C#, bash\n- **Event Systems & Databases:** Kafka, Kinesis, DynamoDB, Postgres\n- **Testing & Performance:** Junit, Gatling, Test Containers, unittest, pytest, load testing\n\n## Education\n\n**Seattle University, Seattle WA**  \nBachelor of Science in Computer Science  \n*September 2014 \u2013 June 2016*\n\n**Seattle Central, Seattle WA**  \nAssociate's Degree  \n*September 2012 \u2013 June 2014*\n\n## Recent AI Side Projects\n\n**AI Chat website (Production SRE Implementation)**\n\n- Implemented scalable Python/Flask backend with observability hooks and reliability monitoring\n- Designed infrastructure as code deployment with containerization for reliability\n- Established performance metrics and SLOs for OpenAI Assistant API integration\n- Implemented automated incident response for API outages and performance degradation\n\n**PDF Benchmarker**\n\n- Part of the first cohort of DeepLearning.ai students to build open-source projects.\n- Current project is a PDF benchmarker to understand the best PDF scraping tools for RAG applications.\n- Built a Python command-line application with Click that has a plugin system for adding new PDF scrapers.\n- Used Microsoft Research's AutoGen library to create a team of AI agents to solve various parts of the task."}]}